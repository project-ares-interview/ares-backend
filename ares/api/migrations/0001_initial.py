# Generated by Django 5.2.5 on 2025-09-08 15:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=6, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('company_name', models.CharField(max_length=100, verbose_name='회사명')),
                ('experience_type', models.CharField(choices=[('newcomer', '신입'), ('experienced', '경력')], max_length=20, verbose_name='신입/경력')),
                ('is_attending', models.BooleanField(default=False, verbose_name='재직중 여부')),
                ('start_date', models.DateField(verbose_name='입사일')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='퇴사일')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='부서')),
                ('responsibilities', models.TextField(blank=True, verbose_name='직위/직책')),
                ('reason_for_leaving', models.CharField(blank=True, max_length=255, verbose_name='퇴사 사유')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='careers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoverLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='자기소개서 제목', max_length=100)),
                ('content', models.TextField(help_text='자기소개서 내용')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성 일시')),
                ('user', models.ForeignKey(help_text='자기소개서 작성자', on_delete=django.db.models.deletion.CASCADE, related_name='cover_letters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '자기소개서',
                'verbose_name_plural': '자기소개서',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('school_type', models.CharField(choices=[('elementary_school', '초등학교'), ('middle_school', '중학교'), ('high_school', '고등학교'), ('junior_college', '대학교 (2-3년제)'), ('university', '대학교 (4년제)')], max_length=20, verbose_name='학교 종류')),
                ('school_name', models.CharField(max_length=100, verbose_name='학교명')),
                ('major', models.CharField(blank=True, max_length=100, verbose_name='전공명')),
                ('degree', models.CharField(blank=True, choices=[('associate', '전문학사'), ('bachelor', '학사'), ('master', '석사'), ('doctorate', '박사')], max_length=50, verbose_name='학위')),
                ('status', models.CharField(choices=[('attending', '재학중'), ('graduated', '졸업'), ('completed', '수료'), ('dropout', '중퇴')], max_length=20, verbose_name='재학 여부')),
                ('admission_date', models.DateField(verbose_name='입학일 (YYYY-MM)')),
                ('graduation_date', models.DateField(blank=True, null=True, verbose_name='졸업일 (YYYY-MM)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MilitaryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('served', '군필'), ('not_served', '미필'), ('exempted', '면제'), ('serving', '복무중')], max_length=20, verbose_name='복무 상태')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='military_service', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patriot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patriot_code', models.CharField(help_text='보훈 대상자일 경우 해당 코드를 입력합니다.', max_length=50, verbose_name='보훈 코드')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patriot', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='이력서 제목 (예: 백엔드 개발자 지원용)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성 일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='최종 수정 일시')),
                ('user', models.ForeignKey(help_text='이력서 작성자', on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '이력서',
                'verbose_name_plural': '이력서 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResumeAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='수상 또는 자격증명', max_length=100)),
                ('issuer', models.CharField(help_text='발급 기관', max_length=100)),
                ('date_awarded', models.DateField(help_text='취득일')),
                ('resume', models.ForeignKey(help_text='수상 내역이 포함된 이력서', on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='api.resume')),
            ],
            options={
                'verbose_name': '이력서 수상/자격증',
                'verbose_name_plural': '이력서 수상/자격증 목록',
                'ordering': ['-date_awarded'],
            },
        ),
        migrations.CreateModel(
            name='ResumeCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('company_name', models.CharField(max_length=100, verbose_name='회사명')),
                ('experience_type', models.CharField(choices=[('newcomer', '신입'), ('experienced', '경력')], max_length=20, verbose_name='신입/경력')),
                ('is_attending', models.BooleanField(default=False, verbose_name='재직중 여부')),
                ('start_date', models.DateField(verbose_name='입사일')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='퇴사일')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='부서')),
                ('responsibilities', models.TextField(blank=True, verbose_name='직위/직책')),
                ('reason_for_leaving', models.CharField(blank=True, max_length=255, verbose_name='퇴사 사유')),
                ('resume', models.ForeignKey(help_text='경력 사항이 포함된 이력서', on_delete=django.db.models.deletion.CASCADE, related_name='careers', to='api.resume')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResumeEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('school_type', models.CharField(choices=[('elementary_school', '초등학교'), ('middle_school', '중학교'), ('high_school', '고등학교'), ('junior_college', '대학교 (2-3년제)'), ('university', '대학교 (4년제)')], max_length=20, verbose_name='학교 종류')),
                ('school_name', models.CharField(max_length=100, verbose_name='학교명')),
                ('major', models.CharField(blank=True, max_length=100, verbose_name='전공명')),
                ('degree', models.CharField(blank=True, choices=[('associate', '전문학사'), ('bachelor', '학사'), ('master', '석사'), ('doctorate', '박사')], max_length=50, verbose_name='학위')),
                ('status', models.CharField(choices=[('attending', '재학중'), ('graduated', '졸업'), ('completed', '수료'), ('dropout', '중퇴')], max_length=20, verbose_name='재학 여부')),
                ('admission_date', models.DateField(verbose_name='입학일 (YYYY-MM)')),
                ('graduation_date', models.DateField(blank=True, null=True, verbose_name='졸업일 (YYYY-MM)')),
                ('resume', models.ForeignKey(help_text='학력 사항이 포함된 이력서', on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='api.resume')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResumeLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(help_text='언어명 (예: English)', max_length=50)),
                ('proficiency', models.CharField(help_text='구사 수준 (예: Native, Fluent)', max_length=50)),
                ('resume', models.ForeignKey(help_text='외국어 능력이 포함된 이력서', on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='api.resume')),
            ],
            options={
                'verbose_name': '이력서 외국어',
                'verbose_name_plural': '이력서 외국어 목록',
            },
        ),
        migrations.CreateModel(
            name='ResumeLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='링크 제목 (예: GitHub, 포트폴리오)', max_length=100)),
                ('url', models.URLField(help_text='링크 주소')),
                ('resume', models.ForeignKey(help_text='링크가 포함된 이력서', on_delete=django.db.models.deletion.CASCADE, related_name='links', to='api.resume')),
            ],
            options={
                'verbose_name': '이력서 링크',
                'verbose_name_plural': '이력서 링크 목록',
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disability_type', models.CharField(max_length=100, verbose_name='장애 종류')),
                ('severity', models.CharField(choices=[('mild', '경증'), ('severe', '중증')], max_length=10, verbose_name='장애 중증도')),
                ('order', models.PositiveIntegerField(verbose_name='정렬 순서')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('user', 'order')},
            },
        ),
        migrations.CreateModel(
            name='JobInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, verbose_name='관심 직무')),
                ('order', models.PositiveIntegerField(verbose_name='정렬 순서')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_interests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '관심 직무',
                'verbose_name_plural': '관심 직무 목록',
                'ordering': ['order'],
                'unique_together': {('user', 'order')},
            },
        ),
    ]
